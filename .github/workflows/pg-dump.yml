# This is a basic workflow to help you get started with Actions

name: PG Dump Anonymizer

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      pg_connection_url:
        description: 'Postgresql connection string'     
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  anonymize_pg_dump:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:14.8

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - run: npm --prefix ./pg-anonymizer install ./pg-anonymizer
      - run: mkdir downloads
      - run: |
          apt-get update
          apt-get install --yes --no-install-recommends postgresql-client
      - name: Run the PG anonymizer
        run: ./pg-anonymizer/bin/run ::add-mask::${{ github.event.inputs.pg_connection_url }} -o downloads/dump.sql --configFile ./sanitize_mapping
      - name: Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: pg-anon-dump-$(date +'%Y-%m-%dT%H:%M')
          path: downloads
